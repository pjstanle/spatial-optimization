import numpy as np
from shapely.geometry import Polygon, LineString, MultiPolygon, Point
import matplotlib.pyplot as plt
import geopandas as gpd
import shapely.wkt
import shapely

def get_xy(A):
    x = np.zeros(len(A))
    y = np.zeros(len(A))
    for i in range(len(A)):
        x[i] = A[i][0]
        y[i] = A[i][1]
    return x,y


def plot_poly(geom,ax):
    if geom.type == 'Polygon':
        exterior_coords = geom.exterior.coords[:]
        x,y = get_xy(exterior_coords)
        ax.plot(x,y,"--k",linewidth=0.5)

        for interior in geom.interiors:
            interior_coords = interior.coords[:]
            x,y = get_xy(interior_coords)
            ax.plot(x,y,"b")

    elif geom.type == 'MultiPolygon':

        for part in geom:
            exterior_coords = part.exterior.coords[:]
            x,y = get_xy(exterior_coords)
            ax.plot(x,y,"--k",linewidth=0.5)

            for interior in part.interiors:
                interior_coords = interior.coords[:]
                x,y = get_xy(interior_coords)
                ax.plot(x,y,"b")


minx = 892752.261995
maxx = 907880.606408
miny = 160974.455735
maxy = 174585.645273

cx = 900173.17505
cy = 167887.783895
dx = (maxx-cx)*0.45
dy = (maxy-cy)*0.45
low_x = minx+dx
high_x = maxx-dx
low_y = miny+dy
high_y = maxy-dy

safe = gpd.GeoSeries(Polygon(([low_x,low_y],[high_x,low_y],[high_x,high_y],[low_x,high_y])))

rotor_diameter = 116.0
hub_height = 88.0
# rotor_diameter = 175.0
# hub_height = 120.0
# rotor_diameter = 200.0
# hub_height = 135.0
setback_mult = 1.1
buffer_distance = setback_mult*(hub_height+rotor_diameter/2.0)

<<<<<<< HEAD
d1 = gpd.read_file("blue_creek_data/feature_parts/buildings.gpkg")
buildings = d1["geometry"][0]
for i in range(len(buildings)):
    ex = buildings[i].buffer(buffer_distance)
    safe = safe.difference(ex)


d1 = gpd.read_file("blue_creek_data/feature_parts/roads.gpkg")
roads = d1["geometry"][0]
for i in range(len(roads)):
    ex = roads[i].buffer(buffer_distance)
    safe = safe.difference(ex)

d1 = gpd.read_file("blue_creek_data/feature_parts/transmission.gpkg")
transmission = d1["geometry"][0]
for i in range(len(transmission)):
    ex = transmission[i].buffer(buffer_distance)
    safe = safe.difference(ex)

d1 = gpd.read_file("blue_creek_data/feature_parts/rails.gpkg")
rails = d1["geometry"][0]
for i in range(len(rails)):
    ex = rails[i].buffer(buffer_distance)
    safe = safe.difference(ex)


turbine_x = np.array([900956.85296442, 901512.34614654, 904283.99539797, 904402.06690802,
       904391.91418393, 903753.60723058, 896221.07270778, 896229.26199076,
       896342.84366932, 904165.5611501 , 903854.66469277, 902872.75730303,
       902916.54012102, 902960.32293901, 902626.65738825, 900060.19904443,
       900401.35022253, 900474.83453449, 899150.07845206, 899592.89294506,
       898507.71602075, 898950.53051375, 899393.34500676, 898750.98257545,
       898245.00473799, 898436.17562114, 899033.88626382, 899225.05714696,
       899416.22803011, 901401.5578142 , 901917.86198736, 896765.15424547,
       897634.69176419, 896623.28321072, 897492.82072944, 896481.41217596,
       897350.94969468, 901467.43238371, 896678.95304715, 896896.98328721,
       896260.73569472, 903667.06640404, 897714.46772122, 896925.6056609 ,
       896914.2104737 , 896383.89473964, 897469.94791295, 903965.45256504,
       903383.97773077, 896221.0154942 , 904227.74552179, 904396.15881255,
       901343.47240357, 901037.82749199, 902261.8879701 , 902030.46087431,
       901773.85265389, 902039.89751388, 902238.91479575, 902037.90634619,
       898120.433888  , 898583.09746215, 898229.72435733, 899045.76103629,
       898692.38793148, 899155.05150562, 901571.40717159, 902047.58265804,
       902114.94376256, 901337.99367482, 901542.56820104, 897068.17974298,
       897449.70615399, 903988.20636043, 896507.62823729, 896266.14292809,
       901050.05689662, 902646.86442227, 902670.95860709, 897813.472425  ,
       897396.60870956, 897321.24160655, 896904.37789111, 896829.01078811,
       903204.38958714, 903439.85022888, 897675.09658492, 898386.58266134,
       897492.63248772, 898204.11856414, 898021.65446693, 899812.15215351,
       900450.09863749, 899812.15215351, 900450.09863749, 899812.15215351,
       900121.20540461, 900052.62528433, 900385.39035514, 900718.15542595,
       900649.57530567, 900982.34037648, 902910.61612174, 902541.3587646 ,
       903213.12010801, 902112.07723562, 902578.76359942, 902532.10896725,
       898847.3214667 , 898954.55914777, 899061.79682885, 899507.97850582,
       899615.21618689, 899722.45386796, 898092.31891366, 898789.21683594,
       898244.11083144, 901775.56406427, 903233.64867502, 903677.70470951,
       903629.40284796, 903581.1009864 , 902536.33340043, 903418.1181596 ,
       903727.03796636, 904101.8159678 , 904410.73577456, 900194.5062119 ,
       899796.94442782, 900789.18593857, 900391.62415448, 899994.0623704 ,
       900588.74209707, 900485.96739519, 899375.40346445])

turbine_y = np.array([170802.24417444, 169603.41346127, 169546.86472794, 168955.65866159,
       168280.62019335, 170400.23879563, 168923.32791207, 167199.83379402,
       167947.05004384, 166973.05641485, 166417.6112939 , 168011.42395642,
       168721.28641824, 169431.14888005, 164166.05957965, 165615.23201569,
       165028.81041598, 164285.64497244, 165943.34687905, 166435.14219674,
       166078.81837359, 166570.61369127, 167062.40900895, 167197.88050349,
       168477.3713437 , 167835.62009023, 168954.60084478, 168312.84959131,
       167671.09833783, 167460.24088984, 166484.38530871, 169147.58449464,
       169147.58449464, 169742.55483214, 169742.55483214, 170337.52516965,
       170337.52516965, 164067.85902965, 164560.57866056, 163989.92293223,
       164072.68991654, 171070.65522189, 167026.63235509, 166489.88537516,
       170898.14603172, 171222.00162022, 171223.04739915, 164371.85535063,
       164257.12483025, 164975.95990916, 171348.29587707, 170182.67289217,
       164646.50313705, 165457.29425854, 169927.23016155, 171049.97264836,
       170433.15403797, 168104.12862223, 168690.02106571, 169236.3589041 ,
       169970.04157539, 170328.46396973, 169193.50316061, 170686.88636408,
       169551.92555495, 169910.3479493 , 165814.39882346, 165456.79107214,
       164574.75978788, 168237.30706094, 168880.37464668, 165623.20254164,
       166134.9498332 , 167528.86280616, 165939.63854278, 166482.72756415,
       171571.59381302, 165690.94181713, 164745.32642258, 167967.92311417,
       168580.50740148, 167624.01197079, 168236.5962581 , 167280.1008274 ,
       166327.49059463, 166884.50077463, 164205.27052115, 163988.5458819 ,
       164861.90569327, 164645.18105402, 165301.81622615, 170788.92636056,
       170515.59056142, 170098.50414721, 169825.16834807, 169408.08193386,
       166192.79837244, 167308.38549387, 166715.26243653, 166122.13937919,
       167237.72650062, 166644.60344328, 170986.20037093, 170503.43727038,
       170162.62274962, 167523.02801648, 167081.52310603, 166500.16733933,
       165447.11568636, 164873.44476184, 164299.77383732, 165356.97031393,
       164783.29938941, 164209.62846489, 171570.8643633 , 171551.41571998,
       170923.04121574, 171571.59002674, 167431.30859818, 168323.98412012,
       168923.56934144, 169523.15456276, 171571.48355536, 165148.57256796,
       165653.26621345, 164944.90625163, 165449.59989712, 168969.80359332,
       168539.05875476, 168829.97996864, 168399.23513009, 167968.49029153,
       167828.66666686, 171292.01779288, 171260.47505133])

=======
# d1 = gpd.read_file("blue_creek_data/feature_parts/buildings.gpkg")
# buildings = d1["geometry"][0]
# for i in range(len(buildings)):
#     ex = buildings[i].buffer(buffer_distance)
#     safe = safe.difference(ex)


# d1 = gpd.read_file("blue_creek_data/feature_parts/roads.gpkg")
# roads = d1["geometry"][0]
# for i in range(len(roads)):
#     ex = roads[i].buffer(buffer_distance)
#     safe = safe.difference(ex)

# d1 = gpd.read_file("blue_creek_data/feature_parts/transmission.gpkg")
# transmission = d1["geometry"][0]
# for i in range(len(transmission)):
#     ex = transmission[i].buffer(buffer_distance)
#     safe = safe.difference(ex)

# d1 = gpd.read_file("blue_creek_data/feature_parts/rails.gpkg")
# rails = d1["geometry"][0]
# for i in range(len(rails)):
#     ex = rails[i].buffer(buffer_distance)
#     safe = safe.difference(ex)


turbine_x = np.array([904364.14073513, 903347.39871299, 902839.02770192, 903855.76972406,
       903347.39871299, 901822.28567978, 904364.14073513, 903855.76972406,
       900805.54365764, 900297.17264657, 904364.14073513, 902330.65669085,
       901822.28567978, 901313.91466871, 899280.43062443, 903347.39871299,
       902839.02770192, 900297.17264657, 899788.8016355 , 898263.68860229,
       904364.14073513, 903855.76972406, 898772.05961336, 898263.68860229,
       901822.28567978, 900297.17264657, 898772.05961336, 896738.57556907,
       896230.204558  , 904364.14073513, 903855.76972406, 900805.54365764,
       896230.204558  , 902839.02770192, 902330.65669085, 901822.28567978,
       898263.68860229, 896230.204558  , 904364.14073513, 903855.76972406,
       900805.54365764, 899788.8016355 , 898263.68860229, 896230.204558  ,
       903347.39871299, 902839.02770192, 902330.65669085, 898263.68860229,
       896230.204558  , 904364.14073513, 903855.76972406, 901313.91466871,
       900805.54365764, 899788.8016355 , 896738.57556907, 903347.39871299,
       902839.02770192, 899788.8016355 , 898772.05961336, 896738.57556907,
       902330.65669085, 901822.28567978, 901313.91466871, 897246.94658015,
       896738.57556907, 900297.17264657, 897246.94658015, 900297.17264657,
       899280.43062443, 898772.05961336, 897246.94658015, 899280.43062443,
       897755.31759122, 897246.94658015, 896230.204558  , 897755.31759122,
       896230.204558  , 896738.57556907, 896230.204558  ])

turbine_y = np.array([171062.83585498, 171044.53637561, 171325.6491237 , 170182.89865199,
       170464.01140007, 171307.34964433, 169321.26092836, 169602.37367645,
       171289.05016497, 171570.16291305, 168740.73595282, 169865.18694517,
       170146.29969325, 170427.41244134, 171551.86343368, 168722.43647345,
       169003.54922154, 170409.11296197, 170690.22571006, 171533.56395432,
       167579.68600174, 167860.79874982, 170671.92623069, 170953.03897878,
       168404.72476663, 169248.06301089, 170091.40125515, 171215.85224749,
       171496.96499558, 166418.63605066, 166699.74879874, 168386.42528726,
       170916.44002004, 166681.44931937, 166962.56206746, 167243.67481555,
       169211.46405215, 170335.9150445 , 165257.58609957, 165538.69884766,
       167225.37533618, 167787.60083235, 168630.93907661, 169755.39006896,
       165239.28662021, 165520.39936829, 165801.51211638, 168050.41410107,
       169174.86509342, 164096.53614849, 164377.64889658, 165783.21263701,
       166064.3253851 , 166626.55088127, 168313.22736979, 164078.23666912,
       164359.34941721, 166046.02590573, 166608.2514019 , 167732.70239425,
       164059.93718976, 164341.04993784, 164622.16268593, 166871.06467062,
       167152.17741871, 164603.86320656, 166290.53969508, 164023.33823102,
       164585.56372719, 164866.67647528, 165710.01471954, 164005.03875165,
       164848.37699591, 165129.489744  , 165691.71524017, 164267.85202037,
       165111.19026463, 164249.552541  , 164530.66528909])
>>>>>>> 3fc30c55d1a8c05edda1da882e60a4ca02124d44

plot_poly(safe[0],plt.gca())

for i in range(len(turbine_x)):
    turb = plt.Circle((turbine_x[i],turbine_y[i]),radius=rotor_diameter/2.0,color="C0")
    plt.gca().add_patch(turb)


polys = list(safe[0])
nzones = len(polys)
areas = np.zeros(nzones)
for i in range(nzones):
    boundary_poly = polys[i]
    areas[i] = boundary_poly.area
order = np.argsort(areas)
for i in range(nzones):
    plt.text(polys[order[i]].centroid.x,polys[order[i]].centroid.y,"%s"%(i+1))

plt.axis("equal")
plt.axis("off")
<<<<<<< HEAD
plt.title("big pop")
# plt.savefig("fig.png",dpi=300)
plt.show()
=======
plt.savefig("fig_pro.png",dpi=300)
>>>>>>> 3fc30c55d1a8c05edda1da882e60a4ca02124d44


